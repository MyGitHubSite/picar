8/14/2017

- normal initialization

step 10 of 2000, train loss 0.105480730534, val loss 0.154404461384
step 20 of 2000, train loss 0.0755970701575, val loss 0.108059942722

step 1990 of 2000, train loss 0.00231279851869, val loss 0.0685500577092
step 2000 of 2000, train loss 0.00154148018919, val loss 0.05231320858


- xavier initialization
step 10 of 2000, train loss 0.0830884277821, val loss 0.105706237257
step 20 of 2000, train loss 0.0990819483995, val loss 0.101846121252
step 30 of 2000, train loss 0.0813312232494, val loss 0.0978090465069

step 1980 of 2000, train loss 0.0041149193421, val loss 0.0778324007988
step 1990 of 2000, train loss 0.00337700662203, val loss 0.0638740062714
step 2000 of 2000, train loss 0.00387647259049, val loss 0.0557858645916


7/16/2017

100 - 

7/15/2017

DAgger method: use dnn input to control, use human input for data collection.

video 22 - 

- Old
vlc v4l2:///dev/video0
mplayer tv:// -tv driver=v4l2:width=640:height=480:device=/dev/video0

cvlc v4l2:///dev/video0 :v4l2-standard= :input-slave=alsa://hw:0,0 :live-caching=300 :sout="#transcode{vcodec=WMV2,vb=800,scale=1,acodec=wma2,ab=128,channels=2,samplerate=44100}:http{dst=:8080/stream.wmv}"

	
http://stackoverflow.com/questions/24017930/how-to-stream-with-ffmpeg-via-http-protocol

ffmpeg -f v4l2 -r 25 -i /dev/video0 http://192.168.0.108:8090/cam1.ffm

avconv -f oss -f video4linux2 -i /dev/video0 out.mpg
  > 4 threads. 30-50% util

mencoder tv:// -tv driver=v4l2:device=/dev/video0 -ovc lavc -noaudio -o webcam.avi
  > 1 thread, 80% util
